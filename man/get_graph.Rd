\name{get_graph}
\alias{get_graph}
\title{Get graph structure from \code{clust_irr} object}
\usage{get_graph(clust_irr, 
                 sample_id,
                 custom_db = NULL, 
                 edit_dist = 0)}
\arguments{
\item{clust_irr}{S4 object generated by the function \code{cluster_irr}}
\item{sample_id}{character, name of the repertoire. It will be appended to
each node's name. If missing, a random \code{sample_id} will be generated 
(e.g. S10)}
\item{custom_db}{data.frame, custom database mapping CDR3 sequences to their
cognate antigens. The structure of \code{custom_db} must be identical to 
e.g. data(vdjdb). This is an optional input that allows us to annotate the 
CDR3s in our data. If \code{custom_db} is not provided, ClustIRR will use 
the internal databases. Else, ClustIRR will use both the internal and user-
provided databases.}
\item{edit_dist}{integer, edit distance threshold. CDR3 sequences from the
graph will be matched with CDR3 sequences with known antigenic specificities 
(from a database). If their edit distance is lower or equal to \code{edit_dist},
then we have a match. Default \code{edit_dist} = 0, i.e. only identical CDR3s 
are matched.}
}
\value{
The main output is a list. The list contains an \code{igraph} object. The graph 
vertices and edges contain attributes. Furthermore, it contains a data.frame 
in which rows are clones (vertices) in the graph. Finally, the list contains 
the logical variable \code{joint_graph}, which is set to \code{TRUE} if the 
graph is a joint graph generated by the function \code{get_joint_graph} and 
\code{FALSE} if the graph is not a joint graph generated by \code{get_graph}.
}

\description{
As input we take a \code{clust_irr} object generated by the function 
\code{cluster_irr}.

From the \code{clust_irr} object we generate a graph in which the vertices 
represent clones, and undirected edges are drawn between a pair of vertices if 
the corresponding clones are locally and/or globally similar (see clustering 
in the documentation of \code{cluster_irr}. 

The main output is an \code{igraph} object.

Furthermore, we compare CDR3s from the graph against CDR3 sequences with known 
epitopes from these databases: VDJdb, McPAS-TCR and TCR3d. The comparison
is done based on the edit distance, where the parameter \code{edit_dist} 
controls the edit distance threshold (default=0). If the edit distance 
between two CDR3s is smaller than \code{edit_dist}, then the database 
information related to this CDR3 is transfered as vertex attribute to the 
corresponding vertex.

With the parameter \code{custom_db}, the user can provide additional 
databases with CDR3 sequences and their cognate antigens.
}

\examples{
# load package input data
data("CDR3ab")
s <- data.frame(CDR3b = CDR3ab[1:100, "CDR3b"], clone_size = 1)
r <- data.frame(CDR3b = CDR3ab[1:5000, "CDR3b"], clone_size = 1)

# artificially enrich motif 'RWGW' inside sample dataset
substr(x = s$CDR3b[1:20], start = 6, stop = 9) <- "RWGW"

# add an artificial clonal expansion of two sequences to the sample dataset
s <- rbind(s, data.frame(CDR3b = c("CATSRADKPDGLDALETQYF", 
                                   "CATSRAAKPDGLAALSTQYF"),
                         clone_size = 5))

# run ClustIRR analysis
out <- cluster_irr(s = s,
                   r = r,
                   ks = 4,
                   cores = 1,
                   control = list(trim_flank_aa = 3))

# get graph
g <- get_graph(out)

names(g)
}
