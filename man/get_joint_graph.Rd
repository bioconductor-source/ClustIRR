\name{get_joint_graph}
\alias{get_joint_graph}
\title{Joins two graphs obtained from two or more \code{clust_irr} objects}
\usage{get_joint_graph(clust_irrs, cores=1)}
\arguments{
\item{clust_irrs}{A list of at least two S4 objects generated with the 
function \code{cluster_irr}}
\item{cores}{integer, number of computer cores to use (default = 1)}
}
\value{
The main output of this function is an \code{igraph} object. This object
represents a joint graph of the individual graphs contained as elements 
in the input clust_irrs. One additional output is a data.frame in which 
rows are clones (vertices) in the joint graph.
}

\description{
As input we take at least two \code{clust_irr} objects generated by the 
function \code{cluster_irr}.

Using each \code{clust_irr} object we generate a graph (with the function 
\code{get_graph}) in which the different vertices represent clones, and 
undirected edges are drawn between a pair of vertices if the corresponding 
clones are locally and/or globally similar (see definitions of local/global 
clustering in the documentation of \code{cluster_irr}. 

The function \code{get_joint_graph} performs the following operation for
a pair of graphs:

First, it adds together (union) the vertices. Second, it performs global 
clustering between the two graphs, i.e. it compares the CDR3 sequences of 
the clones between the two graphs. If two clones have similar CDR3 sequences,
then the corresponding vertices are connected by an edge. 

The results is another \code{igraph} object.
}

\examples{
# load package input data
data("CDR3ab")
s_1 <- base::data.frame(CDR3b = CDR3ab[1:100, "CDR3b"])
s_2 <- base::data.frame(CDR3b = CDR3ab[101:200, "CDR3b"])
r <- base::data.frame(CDR3b = CDR3ab[1:500, "CDR3b"])


# run 1st analysis -> clust_irr object
o_1 <- cluster_irr(s = s_1, r = r, version = 2, ks = 4)

# run 2nd analysis -> clust_irr object
o_2 <- cluster_irr(s = s_2, r = r, version = 2, ks = 4)

# join clust_irr objects in a list               
clust_irrs <- c(o_1, o_2)
names(clust_irrs) <- c("C1", "C2")

# get graph
g <- get_joint_graph(clust_irrs = clust_irrs)

names(g)
}